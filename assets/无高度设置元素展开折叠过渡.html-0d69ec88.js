import{_ as s,M as a,p as t,q as p,R as o,N as e,V as c,t as l,a1 as i}from"./framework-943286ea.js";const u={},r=i(`<h2 id="无高度设置元素展开折叠过渡" tabindex="-1"><a class="header-anchor" href="#无高度设置元素展开折叠过渡" aria-hidden="true">#</a> 无高度设置元素展开折叠过渡</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> elTransition <span class="token operator">=</span>
  <span class="token string">&quot;0.3s height ease-in-out, 0.3s padding-top ease-in-out, 0.3s padding-bottom ease-in-out&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Transition <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;before-enter&quot;</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> elTransition<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>el<span class="token punctuation">.</span>dataset<span class="token punctuation">)</span> el<span class="token punctuation">.</span>dataset <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingTop <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingTop<span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingBottom <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingBottom<span class="token punctuation">;</span>

    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingBottom <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">enter</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldOverflow <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>scrollHeight <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> el<span class="token punctuation">.</span>scrollHeight <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingTop <span class="token operator">=</span> el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingTop<span class="token punctuation">;</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingBottom <span class="token operator">=</span> el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingBottom<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingTop <span class="token operator">=</span> el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingTop<span class="token punctuation">;</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingBottom <span class="token operator">=</span> el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingBottom<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token string">&quot;after-enter&quot;</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldOverflow<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token string">&quot;before-leave&quot;</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>el<span class="token punctuation">.</span>dataset<span class="token punctuation">)</span> el<span class="token punctuation">.</span>dataset <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingTop <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingTop<span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingBottom <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingBottom<span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldOverflow <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow<span class="token punctuation">;</span>

    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> el<span class="token punctuation">.</span>scrollHeight <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">leave</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>scrollHeight <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> elTransition<span class="token punctuation">;</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingBottom <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token string">&quot;after-leave&quot;</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldOverflow<span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingTop <span class="token operator">=</span> el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingTop<span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingBottom <span class="token operator">=</span> el<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>oldPaddingBottom<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;collapseTransition&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">functional</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h<span class="token punctuation">,</span> <span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">on</span><span class="token operator">:</span> Transition<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;transition&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>collapseTransition<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;allSelect&quot;</span> v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">&quot;isActive&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>collapseTransition<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function k(d,v){const n=a("RouterLink");return t(),p("div",null,[o("p",null,[e(n,{to:"/front/frame/"},{default:c(()=>[l("<返回上一页")]),_:1})]),r])}const b=s(u,[["render",k],["__file","无高度设置元素展开折叠过渡.html.vue"]]);export{b as default};
