import{_ as a,p as s,q as n,a1 as e}from"./framework-943286ea.js";const o={},p=e(`<h3 id="一、后端" tabindex="-1"><a class="header-anchor" href="#一、后端" aria-hidden="true">#</a> 一、后端</h3><h4 id="_1、环境准备" tabindex="-1"><a class="header-anchor" href="#_1、环境准备" aria-hidden="true">#</a> 1、环境准备</h4><h6 id="jdk8、redis、mysql、maven【并配置镜像源】" tabindex="-1"><a class="header-anchor" href="#jdk8、redis、mysql、maven【并配置镜像源】" aria-hidden="true">#</a> JDK8、Redis、Mysql、Maven【并配置镜像源】</h6><p>以上工具全部使用msi/exe安装，并勾选添加到环境变量，如果没有添加到环境变量可以参考其他博主关于每种怎么配置的情况 mysql新增一个目录名为ry-vue的空数据库</p><h4 id="_2、前往若依官网下载前后端分离版本-修改若依项目的配置文件" tabindex="-1"><a class="header-anchor" href="#_2、前往若依官网下载前后端分离版本-修改若依项目的配置文件" aria-hidden="true">#</a> 2、前往若依官网下载前后端分离版本，修改若依项目的配置文件</h4><p>1、修改数据库连接【注意端口号，新增的数据库名称是否为ry-vue】 RuoYi-Vue\\ruoyi-admin\\src\\main\\resources目录下的application-druid.yml 数据库主库数据源</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>            # 主库数据源
            master<span class="token operator">:</span>
                url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>ry<span class="token operator">-</span>vue<span class="token operator">?</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span>zeroDateTimeBehavior<span class="token operator">=</span>convertToNull<span class="token operator">&amp;</span>useSSL<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>serverTimezone<span class="token operator">=</span><span class="token constant">GMT</span><span class="token operator">%</span><span class="token number">2</span><span class="token constant">B8</span>
                username<span class="token operator">:</span> root <span class="token comment">//这里填写数据库用户名</span>
                password<span class="token operator">:</span> admin123<span class="token comment">//这里填写数据库密码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、同一目录下的application.yml文件新增配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code># 代码生成
gen<span class="token operator">:</span>
  author<span class="token operator">:</span> ruoyi
  packageName<span class="token operator">:</span> com<span class="token punctuation">.</span>ruoyi<span class="token punctuation">.</span>project<span class="token punctuation">.</span><span class="token keyword">module</span>
  <span class="token namespace">autoRemovePre</span><span class="token operator">:</span> <span class="token boolean">true</span>
  tablePrefix<span class="token operator">:</span> sys_
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用编辑器右键启动该文件：D:\\blanche\\project\\RuoYi-Vue\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java</p><p>输出这个内容则为启动成功，默认启动的是8080 <img src="https://img-blog.csdnimg.cn/cafe81099a7f4ad28881c3c72456ee0f.png" alt="在这里插入图片描述"> 二、前端 1、环境准备 安装nodejs并配置镜像源 2、打开RuoYi-Vue\\ruoyi-ui目录，npm install安装插件，安装完毕后到该目录的vite.config.js中修改target: &#39;http://localhost:80&#39;,代码为8080，如果配置了运行端口号，则使用你的运行端口号 3、使用npm run dev命令运行，项目启动成功！！！</p>`,11),r=[p];function t(c,i){return s(),n("div",null,r)}const d=a(o,[["render",t],["__file","windows配置启动若依前后端项目.html.vue"]]);export{d as default};
