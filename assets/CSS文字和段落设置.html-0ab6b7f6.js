import{_ as i,M as a,p as t,q as p,R as r,N as n,V as d,t as c,a1 as o}from"./framework-943286ea.js";const h={},s=o(`<pre><code>  ### 利用CSS还可以控制段落的属性，主要包括单词间隔、字符间隔、文字修饰、纵向排列、文本转换、文本排列、文本缩进和行高等。
</code></pre><h3 id="_1-1-单词间隔-word-spacing" tabindex="-1"><a class="header-anchor" href="#_1-1-单词间隔-word-spacing" aria-hidden="true">#</a> 1.1 单词间隔 word-spacing</h3><p>语法：</p><p>word-spacing：取值</p><p>说明：</p><p>取值可以使用 mormal,也可以使用长度值。normal 指正常的间隔，是默认选项；长度是设置单词间隔的数值及单位，也可以使用负值。</p><h3 id="_1-2-字符间隔-letter-spacing" tabindex="-1"><a class="header-anchor" href="#_1-2-字符间隔-letter-spacing" aria-hidden="true">#</a> 1.2 字符间隔 letter-spacing</h3><p>使用间隔可以控制字符之间的间隔距离。</p><p>语法：</p><p>letter-spacing:取值</p><h3 id="_1-3-文字修饰-text-decoration" tabindex="-1"><a class="header-anchor" href="#_1-3-文字修饰-text-decoration" aria-hidden="true">#</a> 1.3 文字修饰 text-decoration</h3><p>使用文字修饰属性可以对文本进行修饰，如设置下划线、删除线等。</p><p>语法：</p><p>text-decoration:取值</p><p>说明：</p><p>none 表示不修饰，是默认值；underline 表示对文字添加下划线；overline 表示对文字添加上划线；line-through 表示对文本添加删除线；blink 表示文字闪烁效果。</p><h3 id="_1-4-垂直对齐方式-vertical-align" tabindex="-1"><a class="header-anchor" href="#_1-4-垂直对齐方式-vertical-align" aria-hidden="true">#</a> 1.4 垂直对齐方式 vertical-align</h3><p>使用垂直对齐方式可以设置文字的垂直对齐方式。</p><p>语法：</p><p>vertical-align:排列取值</p><p>说明:</p><p>vertical-align 包括以下取值：</p><p>baseline:浏览器默认的垂直对齐方式；</p><p>sub:文字的下标；</p><p>super:文字的上标</p><p>top:垂直靠上对齐；</p><p>text-top:使元素和上级元素的字体向上对齐；</p><p>middle:垂直居中对齐；</p><p>text-bottom:使元素和上级元素的字体向下对齐。</p><h3 id="_1-5-文本转换-text-transform" tabindex="-1"><a class="header-anchor" href="#_1-5-文本转换-text-transform" aria-hidden="true">#</a> 1.5 文本转换 text-transform</h3><p>文本转换属性用来转换英文字母的大小写。</p><p>语法:</p><p>text-transform：转换值</p><p>说明：</p><p>text-transform 包括以下取值：</p><p>none:表示使用原始值；</p><p>capitalize:表示使用每个单词的第一个字母大写；</p><p>uppercase:表示使用每个单词的所有字母大写；</p><p>lowercase:表示使用每个单词的所有字母小写；</p><h3 id="_1-6-水平对齐方式-text-align" tabindex="-1"><a class="header-anchor" href="#_1-6-水平对齐方式-text-align" aria-hidden="true">#</a> 1.6 水平对齐方式 text-align</h3><p>使用 text-align 属性可以设置文字的水平对齐方式。</p><p>语法:</p><p>text-align:排列值</p><p>说明：</p><p>水平对齐方式取值包括：left,right,center,justify 四种。</p><h3 id="_1-7-文本缩进-text-indent" tabindex="-1"><a class="header-anchor" href="#_1-7-文本缩进-text-indent" aria-hidden="true">#</a> 1.7 文本缩进 text-indent</h3><pre><code>  在HTML中只能控制段落的整体向右缩进，如果不进行设置，浏览器则默认为不缩进，而在CSS中可以控制段落的首行缩进以及进行的缩进的距离。
</code></pre><p>语法:</p><p>text-align:缩进值</p><h3 id="_1-8-文本行高-line-height" tabindex="-1"><a class="header-anchor" href="#_1-8-文本行高-line-height" aria-hidden="true">#</a> 1.8 文本行高 line-height</h3><p>使用文本行高属性可以控制段落中行与行之间的距离。</p><p>语法:</p><p>text-align:行高值</p><p>说明： 行高值可以为长度、倍数或百分比。</p><h3 id="_1-9-处理空白-white-space" tabindex="-1"><a class="header-anchor" href="#_1-9-处理空白-white-space" aria-hidden="true">#</a> 1.9 处理空白 white-space</h3><p>white-space 属相用于设置页面内容空白的处理方式</p><p>语法:</p><p>white-space:空白值</p><p>说明： white-space 包括 3 个值，其中 normal 是默认属性，pre 会导致源代码中的空格和换行符被保留，nowrap 强制在同一行内显示所有文本。</p><h3 id="_1-10-文本反排-unicode-bidi、direction" tabindex="-1"><a class="header-anchor" href="#_1-10-文本反排-unicode-bidi、direction" aria-hidden="true">#</a> 1.10 文本反排 unicode-bidi、direction</h3><p>unicode-bidi、direction 属性经常一起使用，用来设置对象的阅读顺序。</p><p>1.unicode-bidi 属性</p><p>语法:</p><p>unicode-bidi:bidi-override |normal| embed</p><p>说明：</p><p>在 unicode-bidi 属性的值中，bidi-override 表示严格按照 direction 属相的值重排列；normal 表示为默认值；embed 表示对象打开附加的嵌入层，direction 属性的值制定嵌入层，在对象内部进行隐试重排列。</p><h1 id="_2-direction-属性" tabindex="-1"><a class="header-anchor" href="#_2-direction-属性" aria-hidden="true">#</a> 2.direction 属性</h1><p>语法:</p><p>unicode：lir |rtl| inherit</p><p>说明：</p><p>direction 属性的值中，ltr 表示从左到右的顺序阅读；rtl 表示从右到左的顺序阅读；inherit 表示文本流的值不可继承。</p><hr><p>作者：13 期-李美静 来源：CSDN 原文：https://blog.csdn.net/limeijng/article/details/78717068 版权声明：本文为博主原创文章，转载请附上博文链接！</p>`,73);function l(_,x){const e=a("RouterLink");return t(),p("div",null,[r("p",null,[n(e,{to:"/front/css/"},{default:d(()=>[c("<返回上一页")]),_:1})]),s])}const b=i(h,[["render",l],["__file","CSS文字和段落设置.html.vue"]]);export{b as default};
