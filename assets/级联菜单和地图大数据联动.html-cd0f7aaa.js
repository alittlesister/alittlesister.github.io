import{_ as t,M as r,p as n,q as c,R as o,N as _,V as s,t as e,a1 as d}from"./framework-943286ea.js";const i={},h=d('<h3 id="第一步" tabindex="-1"><a class="header-anchor" href="#第一步" aria-hidden="true">#</a> 第一步</h3><p>先写地图的点位加载 记录每一个点的下标，层级</p><h3 id="第二步" tabindex="-1"><a class="header-anchor" href="#第二步" aria-hidden="true">#</a> 第二步</h3><p>再写级联菜单的数据 1、级联菜单有一个全部的分类，该分类的层级是当前分类的上一层分类，需要保存上一个点击过的元素的 id 2、全部分类点击后不更新级联菜单的数据，只更新地图视图 3、级联菜单点击后的层级应自动切换到下一层，而当前选择的元素的遍历应该在当前层 4、封装一个递归函数，递归查询和设置数组里面的 children，将点击过的元素的下标记录下来，根据下标去递归调用函数执行相应的操作，此处应该特别注意，因为全部分类也占用一个下标，所以地图的点位下标和级联菜单的下标是差 1 的</p><h3 id="第三步" tabindex="-1"><a class="header-anchor" href="#第三步" aria-hidden="true">#</a> 第三步</h3><p>使用 emits 去响应父元素的数据，根据响应式数据的原理和 watch，在父元素改变时去设置子元素</p>',6);function l(p,f){const a=r("RouterLink");return n(),c("div",null,[o("p",null,[_(a,{to:"/front/javascript/"},{default:s(()=>[e("<返回上一页")]),_:1}),e(" 分成三步")]),h])}const m=t(i,[["render",l],["__file","级联菜单和地图大数据联动.html.vue"]]);export{m as default};
